{"version":3,"sources":["utils/config.js","utils/web3.js","utils/taylor.js","utils/contract.js","utils/taylor_editor.js","components/MalTayContract.js","views/TaylorEditor.js","App.js","serviceWorker.js","index.js"],"names":["editorOpts","selectOnLineNumbers","minimap","enabled","wordWrap","wordWrapColumn","fontSize","lineNumbersMinChars","lineDecorationsWidth","connect","a","window","ethereum","enable","console","log","getProvider","web3","currentProvider","provider","ethers","providers","Web3Provider","signer","getSigner","DEFAULT_DEPLOYMENT","5777","contract1","root","3","42","4","5","DEPL_BLOCKS","addressKey","chainid","STORAGE_KEY_TAYLOR_ADDRESS","addAddress","address","name","key","addresses","getAddresses","localStorage","setItem","JSON","stringify","getLogs","topic","filter","topics","fromBlock","_network","chainId","toBlock","call","data","transaction","to","sendTransaction","gasLimit","value","gasPrice","response","web3util","send","getFns","logs","map","substring","hexDecode","signature","defaultValues","uint","bool","bytes","symbol","list","any","argsDisplay","func","argsdetail","inputs","inp","type","join","Array","arity","_","i","textStyle","color","fontFamily","pickerStyle","backgroundColor","btniconStyle","marginLeft","marginRight","MalTayContract","props","state","rootAddress","rootFunctions","addrToBeRegistered","registered","onChangeAddress","bind","onChangeCurrentName","onAddressSave","onChangeRootAddress","onChangeRegisteredAddress","onRegister","setWeb3","this","onRootChange","getNetwork","setState","_web3util","setContract","setRegistered","setFunctions","count","parseInt","expr","maltay","expr2h","raddr","concat","Object","keys","nativeEnv","newaddress","find","newval","styles","width","addrs","assign","rootOptions","Item","label","style","flex","small","light","position","top","right","onClick","open","picker","borderColor","mode","selectedValue","onValueChange","fontWeight","placeholder","onChangeText","Component","TaylorEditor","code","source","getItem","taylorUtils","encoded","getWindowDimensions","pageNumber","result","errors","taycall","taysend","onContentSizeChange","onTextChange","execute","Dimensions","addEventListener","encdata","force","includes","decode","e","receipt","wait","status","Error","wdims","get","rootDims","document","getElementById","getBoundingClientRect","height","editor","monaco","focus","taylorFunctions","languages","register","id","funcSuggestions","range","insertText","construct","kind","CompletionItemKind","Function","detail","documentation","docs","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","model","word","getWordUntilPosition","startLineNumber","lineNumber","endLineNumber","startColumn","endColumn","suggestions","monacoTaylorExtension","editorStyles","consoleStyles","panelStyles","page","ScrollView","horizontal","pagingEnabled","scrollEnabled","scrollEventThrottle","nestedScrollEnabled","contentContainerStyle","language","theme","options","onChange","editorWillMount","editorDidMount","bottom","left","maxHeight","minHeight","heigth","src","collapsed","shouldCollapse","field","opacity","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.58abb365.chunk.js","sourcesContent":["const editorOpts = {\n  selectOnLineNumbers: true,\n  minimap: {enabled: false},\n  wordWrap: 'on',\n  wordWrapColumn: 80,\n  fontSize: 18,\n  lineNumbersMinChars: 2,\n  lineDecorationsWidth: 0,\n}\n\nexport {\n  editorOpts,\n}\n","import { ethers } from 'ethers';\n\nconst connect = async () => {\n    if (window.ethereum) {\n        try {\n            // eslint-disable-next-line\n            await ethereum.enable();\n        } catch (error) {\n            console.log('User rejected dApp connection');\n        }\n    } \n};\n\nconst getProvider = async () => {\n  await connect();\n  if (window.web3 && window.web3.currentProvider) {\n    // eslint-disable-next-line\n    const provider = new ethers.providers.Web3Provider(web3.currentProvider);\n    const signer = provider.getSigner(0);\n    return { provider, signer };\n  }\n  return {};\n}\n\nexport {\n  getProvider,\n}\n","const DEFAULT_CODE = '(add (mul 2 (add 13 56)) 9000)';\nconst STORAGE_KEY_CODE = 'TaylorCode';\nconst STORAGE_KEY_TAYLOR_ADDRESS = 'TaylorInterpreterAddress';\n\nconst DEFAULT_DEPLOYMENT = {\n  5777: {\n    contract1: '0x04d37378feb94dee3f6a07c1feb3ca630149d6d5',\n    root: 'contract1'\n  },\n  3: {\n    contract1: '0xc6743db47ce3702599820282940c3561b2269556',\n    root: 'contract1',\n  },\n  42: {\n    contract1: '0xee0c10d568c9772892aab27c3fc14d7033658833',\n    root: 'contract1',\n  },\n  4: {\n    contract1: '0x19c08c750420af47059e68888b0f6a32698d0928',\n    root: 'contract1',\n  },\n  5: {\n    contract1: '0x5d6aa1a248655f76917bb97a7fef24dd40aa2b6d',\n    root: 'contract1',\n  },\n}\n\nconst DEPL_BLOCKS = {\n  5777: 0,\n  3: 8036099,\n  42: 18899976,\n  4: 6616106,\n  5: 2823431,\n}\n\nconst storeCode = source => {\n  window.localStorage.setItem(STORAGE_KEY_CODE, source);\n}\n\nconst getCode = () => {\n  let source = window.localStorage.getItem(STORAGE_KEY_CODE);\n  if (!source) {\n    source = DEFAULT_CODE;\n    window.localStorage.setItem(STORAGE_KEY_CODE, source);\n  }\n  return source;\n}\n\nconst addressKey = chainid => STORAGE_KEY_TAYLOR_ADDRESS + '_' + chainid;\n\nconst addAddress = (chainid, address, name) => {\n  const key = addressKey(chainid);\n  const addresses = getAddresses(chainid);\n  addresses[name] = address;\n  addresses.root = name;\n  localStorage.setItem(key, JSON.stringify(addresses));\n}\n\nconst getAddresses = (chainid) => {\n  const key = addressKey(chainid);\n  let addresses;\n  // let addresses = localStorage.getItem(key);\n  // if (addresses) {\n  //   addresses = JSON.parse(addresses);\n  //   addresses = Object.assign((DEFAULT_DEPLOYMENT[chainid] || {}), addresses);\n  // } else {\n    addresses = DEFAULT_DEPLOYMENT[chainid] || {};\n    localStorage.setItem(key, JSON.stringify(addresses));\n  // }\n  return addresses;\n}\n\nconst getNamedAddress = (chainid, name) => {\n  const addresses = getAddresses(chainid);\n  return addresses[name];\n}\n\nconst clearAddresses = (chainid) => {\n  const key = addressKey(chainid);\n  localStorage.setItem(key, '{}');\n}\n\nexport {\n  storeCode,\n  getCode,\n  addAddress,\n  getAddresses,\n  getNamedAddress,\n  clearAddresses,\n  DEPL_BLOCKS,\n  DEFAULT_DEPLOYMENT,\n}\n","import { DEPL_BLOCKS } from './taylor.js';\n\nconst getLogs = provider => address => async topic => {\n    const filter = {\n        address: address,\n        topics: [ topic ],\n        fromBlock: DEPL_BLOCKS[provider._network.chainId] || 0,\n        toBlock: 'latest',\n    }\n    return provider.getLogs(filter);\n}\n\nconst getStoredFunctions = getLogs => async () => {\n    const topic = '0x00000000000000000000000000000000000000000000000000000000ffffffff';\n    const logs = await getLogs(topic);\n\n    return logs.map(log => {\n        log.name = log.topics[1].substring(2).hexDecode();\n        log.signature = '0x' + log.topics[2].substring(58);\n        return log;\n    });\n}\n\n  \nconst call = provider => address => async data => {\n    let transaction = {\n        to: address,\n        data\n    }\n    return await provider.call(transaction);\n}\n  \nconst sendTransaction = signer => address => async data => {\n    const transaction = {\n        data,\n        gasLimit: 1000000,\n        value: 0,\n        to: address,\n        gasPrice: 21,\n    };\n    const response = await signer.sendTransaction(transaction);\n    return response;\n}\n\nconst web3util = (provider, signer) => {\n    return address => {\n        return {\n            call: call(provider)(address),\n            send: sendTransaction(signer)(address),\n            getLogs: getLogs(provider)(address),\n            getFns: getStoredFunctions(getLogs(provider)(address)),\n        }\n    }\n}\n\nexport {\n    getLogs,\n    getStoredFunctions,\n    call,\n    sendTransaction,\n    web3util,\n}\n","const defaultValues = {\n    uint: 12,\n    bool: true,\n    address: `0x\"0000000000000000000000000000000000000000\"`,\n    bytes: `0x\"00\"`,\n    symbol: 'name',\n    list: '12 13',\n    any: 'somename',\n}\n\nconst argsDisplay = func => {\n    let argsdetail;\n    \n    if (func.inputs) argsdetail = func.inputs.map(inp => inp.type).join(' ');\n    else argsdetail = [...new Array(func.arity || 0)]\n        .map((_, i) => 'arg_' + i)\n        .join(' ');\n    if (!func.arity) argsdetail = 'a b ...';\n    \n    return argsdetail;\n}\n\nconst monacoTaylorExtension = (monaco, taylorFunctions) => {\n    monaco.languages.register({ id: 'taylor' });\n\n    const funcSuggestions = (range) => Object.keys(taylorFunctions).map(name => {\n        const func = taylorFunctions[name];\n        let argsdetail = argsDisplay(func);\n\n        let insertText = func.construct;\n        if (!insertText) {\n            insertText = name;\n            if (func.inputs) {\n                insertText += ' ' + func.inputs.map(inp => defaultValues[inp.type]).join(' ');\n            }\n        }\n        return {\n            label: name,\n            kind: monaco.languages.CompletionItemKind.Function,\n            insertText: insertText + ')',\n            detail: '(' + argsdetail + ')',\n            documentation: func.docs,\n            range\n          }\n    });\n\n    // Register a completion item provider for the new language\n    monaco.languages.registerCompletionItemProvider('taylor', {\n      triggerCharacters: ['('],\n      provideCompletionItems: (model, position) => {\n\n        let word = model.getWordUntilPosition(position);\n        let range = {\n            startLineNumber: position.lineNumber,\n            endLineNumber: position.lineNumber,\n            startColumn: word.startColumn,\n            endColumn: word.endColumn\n        };\n        return { suggestions: funcSuggestions(range) };\n      }\n    });\n}\n\nexport {\n    monacoTaylorExtension,\n    argsDisplay,\n}\n","import React, { Component } from 'react';\nimport { View, Item, Input, Text, Button, Icon, Picker } from 'native-base';\nimport { getProvider } from '../utils/web3.js';\nimport { addAddress, getAddresses } from '../utils/taylor.js';\nimport maltay from '@pipeos/taylor';\nimport { web3util } from '../utils/contract.js';\nimport { editorOpts } from '../utils/config.js';\nimport { argsDisplay } from '../utils/taylor_editor.js';\n\nconst textStyle = {\n  color: 'beige',\n  fontSize: editorOpts.fontSize,\n  fontFamily: 'monospace',\n}\n\nconst pickerStyle = {\n  backgroundColor: 'rgb(169, 169, 169)',\n}\n\nconst btniconStyle = { marginLeft: '10px', marginRight: '10px'}\n\nclass MalTayContract extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      provider: null,\n      signer: null,\n      rootAddress: {},\n      addresses: {},\n      rootFunctions: [],\n      addrToBeRegistered: null,\n      registered: {},\n    }\n\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeCurrentName = this.onChangeCurrentName.bind(this);\n    this.onAddressSave = this.onAddressSave.bind(this);\n    this.onChangeRootAddress = this.onChangeRootAddress.bind(this);\n    this.onChangeRegisteredAddress = this.onChangeRegisteredAddress.bind(this);\n    this.onRegister = this.onRegister.bind(this);\n  \n    this.setWeb3();\n  }\n\n  async setWeb3() {\n    const { provider, signer } = await getProvider();\n    if (!provider) {\n      this.props.onRootChange(null, null);\n      return;\n    }\n    const chainid = (await provider.getNetwork()).chainId;\n    const addresses = getAddresses(chainid);\n    const rootAddress = {name: addresses.root, address: addresses[addresses.root]};\n    this.setState({ addresses, rootAddress, provider, signer });\n    \n    this._web3util = web3util(provider, signer);\n    this.setContract(rootAddress.address);\n    this.setRegistered(rootAddress.address);\n  }\n\n  setContract(address) {\n    address = address || this.state.rootAddress;\n    if(!address) {\n        this.web3util = null;\n    } else {\n      this.web3util = this._web3util(address);\n      this.props.onRootChange(this.web3util.call, this.web3util.send);\n\n      this.setFunctions(address);\n    }\n  }\n\n  async setRegistered(address) {\n    address = address || this.state.rootAddress.address;\n    if (!address) return;\n\n    let count = await this.web3util.call('0x44444440');\n    count = parseInt(count, 16);\n    let registered = {};\n\n    for (let i = 1; i <= count; i++) {\n      const expr = maltay.expr2h('(getregistered ' + i + ')');\n      let raddr = await this.web3util.call(expr);\n      raddr = '0x' + raddr.substring(10);\n      registered[raddr] = raddr;\n    }\n    this.setState({ registered });\n  }\n\n  async setFunctions(address) {\n    address = address || this.state.rootAddress.address;\n    if (!address) return;\n\n    let logs = await this.web3util.getFns();\n    let rootFunctions = logs.map(log => '(' + log.name + ' ... )')\n      .concat(Object.keys(maltay.nativeEnv).map(name => {\n        return '(' + name + ' ' + argsDisplay(maltay.nativeEnv[name]) + ')';\n      }));\n    this.setState({ rootFunctions });\n  }\n\n  async onChangeAddress(address) {\n    const { rootAddress } = this.state;\n    rootAddress.address = address;\n    this.setState({ rootAddress });\n  }\n\n  onChangeCurrentName(name) {\n    const { rootAddress } = this.state;\n    rootAddress.name = name;\n    this.setState({ rootAddress });\n  }\n\n  async onAddressSave() {\n    const { rootAddress } = this.state;\n    const { provider  } = this.state;\n    const chainid = (await provider.getNetwork()).chainId;\n\n    addAddress(chainid, rootAddress.address, rootAddress.name);\n    this.setContract(rootAddress.address);\n    this.setRegistered(rootAddress);\n  }\n\n  onChangeRootAddress(newaddress) {\n    const { addresses } = this.state;\n    const name = Object.keys(addresses).find(name => addresses[name] === newaddress) || newaddress;\n\n    const rootAddress = { name, address: newaddress};\n    if (!addresses[name]) {\n      addresses[name] = newaddress;\n      this.setState({ addresses });\n    }\n    this.setState({ rootAddress });\n    this.setContract(rootAddress.address);\n    this.setRegistered(newaddress);\n  }\n\n  onChangeRegisteredAddress(newval) {\n    this.setState({ addrToBeRegistered: newval });\n  }\n\n  async onRegister() {\n    const { addrToBeRegistered } = this.state;\n    \n    const expr = maltay.expr2h('(register! 0x\"' + addrToBeRegistered.substring(2) + '\")');\n    await this.web3util.send(expr);\n\n    // TODO check receipt for success;\n    this.setRegistered();\n  }\n\n  render() {\n    const {styles} = this.props;\n    styles.width -= 10;\n    const { rootAddress, addresses, registered, rootFunctions } = this.state;\n\n    const addrs = Object.assign({}, addresses);\n    delete addrs.root;\n    const rootOptions = Object.keys(addrs)\n      .map(name => {\n        return <Picker.Item label={name} value={addresses[name]} key={name}/>\n      })\n\n    return (\n        <View style={{ ...styles, flex: 1 }}>\n        <Button small light\n          style={{ position: 'fixed', top: '10px', right: '30px' }}\n          onClick={() => window.open('https://github.com/loredanacirstea/taylor', '_blank')}\n        >\n          <Icon name='info' type=\"FontAwesome\" style={btniconStyle} />\n        </Button>\n          <br></br><br></br>\n          <Text style={textStyle}>select root Taylor contract:</Text>\n          <Item picker style={{ borderColor: false}}>\n            <Picker\n              mode=\"dropdown\"\n              style={{ width: styles.width, ...pickerStyle }}\n              selectedValue={this.state.rootAddress.name}\n              onValueChange={this.onChangeRootAddress}\n            >\n              { rootOptions }\n            </Picker>\n          </Item>\n\n          <br></br><br></br>\n          <Text style={textStyle}>@root address:</Text>\n          <Text style={{...textStyle, fontWeight: 'bold', fontSize: textStyle.fontSize + 2}}>{ rootAddress.address || '-' }</Text>\n          <br></br>\n          <Text style={textStyle}>registered contracts @root:</Text>\n\n          <Item picker style={{ borderColor: false}}>\n            <Picker\n              mode=\"dropdown\"\n              style={{ width: styles.width, ...pickerStyle }}\n              selectedValue={this.state.rootAddress.name}\n              onValueChange={this.onChangeRootAddress}\n            >\n              <Picker.Item label=\"...\" value={''} />\n              {\n                Object.keys(registered).map(name => {\n                  return <Picker.Item label={name} value={addresses[name]} key={name}/>\n                })\n              }\n            </Picker>\n          </Item>\n\n          <br></br><br></br>\n          <Text style={textStyle}>@root functions:</Text>\n          \n          <Item picker style={{ borderColor: false}}>\n            <Picker\n              mode=\"dropdown\"\n              style={{ width: styles.width, ...pickerStyle }}\n            >\n              <Picker.Item label=\"...\" value={''} />\n              {\n                rootFunctions.map((name, i) => {\n                  return <Picker.Item label={name} value={name} key={i}/>\n                })\n              }\n            </Picker>\n          </Item>\n\n          <br></br><br></br>\n          <Text style={textStyle}>register a Taylor contract @root:</Text>\n          <Item style={{ width: styles.width }}>\n            <Input\n              style={textStyle}\n              placeholder='address'\n              label='address'\n              onChangeText={this.onChangeRegisteredAddress}\n            />\n            <Button small light onClick={this.onRegister}>\n              <Icon name='save' style={btniconStyle} />\n            </Button>\n          </Item>\n\n          <br></br><br></br>\n        </View>\n    );\n  }\n}\n\nexport default MalTayContract;\n\n//           <br></br><br></br><br></br>\n//           <Text style={textStyle}>declare another Taylor root:</Text>\n//           <Item style={{ width: styles.width }}>\n//             <Input\n//               style={textStyle}\n//               placeholder='address'\n//               label='address'\n//               onChangeText={this.onChangeAddress}\n//             />\n//           </Item>\n//           <Item style={{ width: styles.width, marginBottom: 5 }}>\n//             <Input\n//               style={textStyle}\n//               placeholder='name'\n//               label='name'\n//               onChangeText={this.onChangeCurrentName}\n//             />\n//             <Button small light onClick={this.onAddressSave}>\n//               <Icon name='save' />\n//             </Button>\n//           </Item>\n","import React, { Component } from 'react';\nimport { Dimensions, ScrollView } from 'react-native';\nimport { View, Button, Icon, Text } from 'native-base';\nimport MonacoEditor from 'react-monaco-editor';\nimport { editorOpts } from '../utils/config.js';\nimport MalTayContract from '../components/MalTayContract.js';\nimport * as taylorUtils from '../utils/taylor.js';\nimport maltay from '@pipeos/taylor';\nimport { monacoTaylorExtension } from '../utils/taylor_editor.js';\n\nimport ReactJson from 'custom-react-json-view'\n\nconst MIN_WIDTH = 800;\n\nclass TaylorEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    const code =  taylorUtils.getCode();\n    const encoded = maltay.expr2h(code);\n\n    this.state = {\n      ...this.getWindowDimensions(),\n      pageNumber: 3,\n      code,\n      encoded,\n      result: [{data: encoded}],\n      errors: '',\n      rootAddress: null,\n      taycall: null,\n      taysend: null,\n    }\n\n    this.onContentSizeChange = this.onContentSizeChange.bind(this);\n    this.getWindowDimensions = this.getWindowDimensions.bind(this);\n    this.onTextChange = this.onTextChange.bind(this);\n    this.execute = this.execute.bind(this);\n    this.onRootChange = this.onRootChange.bind(this);\n\n    Dimensions.addEventListener('change', () => {\n      this.onContentSizeChange();\n    });\n  }\n\n  onRootChange(taycall, taysend) {\n    this.setState({\n        taycall,\n        taysend,\n    });\n    if (!taycall) {\n      const errors = \"No web3 provider found. Please connect to one (e.g. Metamask).\";\n      this.setState({ errors });\n    } else {\n      this.execute();\n    }\n  }\n\n  async execute({encdata, code, force=false}={}) {\n      encdata = encdata || this.state.encoded;\n      code = code || this.state.code;\n      const isTransaction = code && code.includes(\"!\");\n\n      if (!isTransaction) {\n        let encoded;\n        try {\n            encoded = await this.state.taycall(encdata);\n        } catch (e) {}\n        let result;\n        try {\n            result = maltay.decode(encoded);\n        } catch(e) {}\n        this.setState({ result: [{ result, encoded, data: encdata }] });\n      } else if (force) {\n          let response, receipt = {};\n          try {\n            response = await this.state.taysend(encdata);\n            this.setState({ result: [{ receipt: response }] });\n            receipt = await response.wait();\n          } catch (e) {\n            console.log(e);\n          }\n        \n        if (receipt.status === 0) {\n            throw new Error('Transaction failed');\n        }\n        this.setState({ result: [{ receipt }] });\n\n      }\n  }\n\n  onContentSizeChange() {\n    this.setState(this.getWindowDimensions());\n  }\n\n  getWindowDimensions() {\n    let wdims = Dimensions.get('window');\n    let rootDims = document.getElementById('TaylorRoot').getBoundingClientRect();\n\n    const dims = {\n      width: wdims.width || rootDims.width,\n      height: wdims.height || rootDims.height,\n    }\n    return dims;\n  }\n\n  editorDidMount(editor, monaco) {\n    editor.focus();\n  }\n\n  editorWillMount(monaco) {\n    monacoTaylorExtension(monaco, maltay.nativeEnv);\n  }\n\n  onTextChange(code) {\n      try {\n        const encoded = maltay.expr2h(code);\n        this.setState({ code });\n        taylorUtils.storeCode(code);\n        this.execute({encdata: encoded, code});\n      } catch(e) {}\n  }\n\n  render() {\n    let {\n      width,\n      height,\n    } = this.state;\n\n    let editorStyles, consoleStyles, panelStyles;\n    if (width > MIN_WIDTH) {\n      const page = width / 3;\n      editorStyles = { width: page * 2, height: height * 2 / 3 };\n      consoleStyles = { width: page * 2, height: height - editorStyles.height };\n      panelStyles = { width: page, height };\n    } else {\n      editorStyles = { width, height: height * 2 / 3 };\n      consoleStyles = { width, height: height - editorStyles.height };\n      panelStyles = { width, height };\n    }\n\n    const {code, result, errors, taycall, taysend} = this.state;\n\n    return (\n      <ScrollView\n          horizontal={true}\n          pagingEnabled={true}\n          scrollEnabled={true}\n          scrollEventThrottle={100}\n          nestedScrollEnabled={true}\n          contentContainerStyle={{width: \"100%\"}}\n          onContentSizeChange={this.onContentSizeChange}\n      >\n           \n        <MonacoEditor\n            width={editorStyles.width}\n            height={editorStyles.height}\n            language=\"taylor\"\n            theme=\"vs-dark\"\n            value={code}\n            options={editorOpts}\n            onChange={this.onTextChange}\n            editorWillMount={this.editorWillMount}\n            editorDidMount={this.editorDidMount}\n        />\n        <View\n        style={{ ...consoleStyles, position: 'fixed', bottom: '0px', left: '0px' }}\n        >\n          <ScrollView\n            horizontal={false}\n            scrollEnabled={true}\n            scrollEventThrottle={100}\n            nestedScrollEnabled={true}\n            contentContainerStyle={{ ...consoleStyles, maxHeight: consoleStyles.height, minHeight: consoleStyles.heigth }}\n          >\n            <ScrollView\n              horizontal={true}\n              scrollEnabled={true}\n              scrollEventThrottle={100}\n              contentContainerStyle={{ ...consoleStyles, maxHeight: consoleStyles.height, minHeight: consoleStyles.heigth }}\n            >\n              {errors\n                  ? <Text style={{color: 'firebrick', fontSize: editorOpts.fontSize }}>{errors}</Text>\n                  : <ReactJson\n                  src={result}\n                  name=\"result\"\n                  theme=\"twilight\"\n                  collapsed={6}\n                  shouldCollapse={field => field.name === 'd' }\n                  style={{ ...consoleStyles, fontSize: editorOpts.fontSize }}\n                  />\n              }\n            </ScrollView>\n          </ScrollView>\n        </View>\n        <Button\n            small\n            light\n            style={{ position: 'fixed', top: '0px', left: '0px', backgroundColor: 'white',  opacity: 0.5 }}\n            onClick={() => this.execute({force: true})}\n        >\n            <Icon style={{ marginLeft: '10px', marginRight: '10px'}} type=\"FontAwesome\" name='play' />\n        </Button>\n        <ScrollView\n          horizontal={false}\n          scrollEnabled={true}\n          scrollEventThrottle={100}\n          nestedScrollEnabled={true}\n          contentContainerStyle={panelStyles}\n        >\n          <MalTayContract\n              taycall={taycall}\n              taysend={taysend}\n              styles={{...panelStyles}}\n              onRootChange={this.onRootChange}\n          />\n        </ScrollView>\n      </ScrollView>\n    );\n  }\n}\n\nexport default TaylorEditor;\n","import React from 'react';\nimport './App.css';\nimport TaylorEditor from './views/TaylorEditor.js';\n\nfunction App (props) {\n  return (<TaylorEditor />);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('TaylorRoot')\n// );\n\nReactDOM.render(<App />, document.getElementById('TaylorRoot'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}